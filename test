context=test-infra
metadata.org=example.com/$ORG_PATH/
metadata.maintainer=k8s-admin (me@example.com)
metadata.description=example Desired State File for demo purposes.
metadata.key=${VALUE}
settings.kubeContext=minikube
settings.globalMaxHistory=5
namespaces.production.protected=true
namespaces.production.limits[0].type=Container
namespaces.production.limits[0].default.cpu=300m
namespaces.production.limits[0].default.memory=200Mi
namespaces.production.limits[0].defaultRequest.cpu=200m
namespaces.production.limits[0].defaultRequest.memory=100Mi
namespaces.production.limits[1].type=Pod
namespaces.production.limits[1].max.memory=300Mi
namespaces.staging.protected=false
namespaces.staging.labels.env=staging
namespaces.staging.quotas.limits.cpu=10
namespaces.staging.quotas.limits.memory=20Gi
namespaces.staging.quotas.pods=25
namespaces.staging.quotas.requests.cpu=10
namespaces.staging.quotas.requests.memory=30Gi
namespaces.staging.quotas.customQuotas[0].name=requests.nvidia.com/gpu
namespaces.staging.quotas.customQuotas[0].value=2
helmRepos.argo=https://argoproj.github.io/argo-helm
helmRepos.jfrog=https://charts.jfrog.io
apps.argo.namespace=staging
apps.argo.enabled=true
apps.argo.chart=argo/argo
apps.argo.version=0.8.5
apps.argo.valuesFile=
apps.argo.test=false
apps.argo.protected=true
apps.argo.priority=-3
apps.argo.wait=true
apps.argo.hooks.successCondition=Complete
apps.argo.hooks.successTimeout=90s
apps.argo.hooks.deleteOnSuccess=true
apps.argo.hooks.preInstall=job.yaml
apps.argo.set.images.tag=$$TAG
apps.artifactory.namespace=production
apps.artifactory.enabled=true
apps.artifactory.chart=jfrog/artifactory
apps.artifactory.version=8.3.2
apps.artifactory.valuesFile=
apps.artifactory.test=false
apps.artifactory.priority=-2
apps.artifactory.noHooks=false
apps.artifactory.timeout=300
apps.artifactory.maxHistory=4
apps.artifactory.helmFlags[0]=--devel
